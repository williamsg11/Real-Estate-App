// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders AddressPicker 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontSize": 14,
          "fontWeight": "600",
          "justifyContent": "center",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    test
  </Text>
  <RCTScrollView
    alwaysBounceHorizontal={true}
    alwaysBounceVertical={false}
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "paddingVertical": 10,
      }
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    horizontal={true}
    onContentSizeChange={null}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={undefined}
    onResponderTerminationRequest={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onScrollShouldSetResponder={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    sendMomentumEvents={false}
    showsHorizontalScrollIndicator={false}
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexGrow": 1,
          "flexShrink": 1,
          "overflow": "scroll",
        },
        Object {
          "flex": 1,
          "flexDirection": "row",
        },
      ]
    }
  >
    <RCTScrollContentView
      collapsable={false}
      removeClippedSubviews={undefined}
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "center",
            "paddingVertical": 10,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingHorizontal": 20,
            "paddingVertical": 10,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "fontSize": 14,
                },
                false,
              ]
            }
          >
            10-20
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 12,
                }
              }
            />
          </Text>
        </View>
      </View>
    </RCTScrollContentView>
  </RCTScrollView>
</View>
`;
