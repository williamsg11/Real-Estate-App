// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders UploadImage 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#e3e7ed",
      "flex": 1,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "paddingBottom": 20,
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 100,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "flex": 3,
        "padding": 10,
      }
    }
  >
    <RCTScrollView
      alwaysBounceHorizontal={undefined}
      alwaysBounceVertical={true}
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "center",
        }
      }
      contentInset={
        Object {
          "bottom": 50,
        }
      }
      dataSource={
        ListViewDataSource {
          "items": 1,
        }
      }
      enableEmptySections={true}
      onContentSizeChange={null}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={undefined}
      onResponderTerminationRequest={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onScrollShouldSetResponder={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      renderRow={[Function]}
      renderScrollComponent={[Function]}
      sendMomentumEvents={false}
      showsVerticalScrollIndicator={false}
      style={
        Array [
          Object {
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "overflow": "scroll",
          },
          Object {
            "padding": 5,
          },
        ]
      }
    >
      <RCTScrollContentView
        collapsable={false}
        removeClippedSubviews={undefined}
        style={
          Array [
            undefined,
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F6F6F6",
              "borderColor": "#CCC",
              "borderRadius": 2,
              "borderWidth": 0.5,
              "height": 140,
              "justifyContent": "center",
              "margin": 5,
              "padding": 5,
              "width": 140,
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "left": -10,
                  "position": "absolute",
                  "top": -10,
                  "zIndex": 1000,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "red",
                    "fontSize": 25,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": "a.png",
                }
              }
              style={
                Object {
                  "height": 125,
                  "width": 125,
                }
              }
            />
          </View>
        </View>
      </RCTScrollContentView>
    </RCTScrollView>
  </View>
</View>
`;
